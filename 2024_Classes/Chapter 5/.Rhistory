library(fpp3)
library(ggplot2)
library(feasts)
library(glue)
library(GGally)
library(broom)
library(fpp3)
library(ggplot2)
library(feasts)
library(glue)
library(GGally)
library(broom)
tourism_features <- tourism |>
features(Trips, feature_set(pkgs = "feasts"))
library(fpp3)
library(ggplot2)
library(feasts)
library(glue)
library(GGally)
library(broom)
tourism_features <- tourism |>
features(Trips, feature_set(pkgs = "feasts"))
tourism_features |>
filter(Purpose == "Holiday") |>
select_at(vars(contains("season"))) |>
mutate(
seasonal_peak_year = seasonal_peak_year +
4*(seasonal_peak_year==0),
seasonal_trough_year = seasonal_trough_year +
4*(seasonal_trough_year==0),
seasonal_peak_year = glue("Q{seasonal_peak_year}"),
seasonal_trough_year = glue("Q{seasonal_trough_year}"),
) |>
GGally::ggpairs()
View(tourism_features)
tourism_features |>
filter(Purpose == "Holiday") |>
select_at(vars(contains("season")))
temp=tourism_features |>
filter(Purpose == "Holiday")
View(temp)
temp=tourism_features |>
filter(Purpose == "Holiday") |>
select_at(vars(contains("season"))) |>
mutate(
seasonal_peak_year = seasonal_peak_year +
4*(seasonal_peak_year==0),
seasonal_trough_year = seasonal_trough_year +
4*(seasonal_trough_year==0),
seasonal_peak_year = glue("Q{seasonal_peak_year}"),
seasonal_trough_year = glue("Q{seasonal_trough_year}"),
)
View(temp)
tourism_features |>
filter(Purpose == "Holiday") |>
select_at(vars(contains("season"))) |>
group_by(State)|>
mutate(
seasonal_peak_year = seasonal_peak_year +
4*(seasonal_peak_year==0),
seasonal_trough_year = seasonal_trough_year +
4*(seasonal_trough_year==0),
seasonal_peak_year = glue("Q{seasonal_peak_year}"),
seasonal_trough_year = glue("Q{seasonal_trough_year}"),
) |>
GGally::ggpairs()
tourism_features |>
group_by(State)|>
filter(Purpose == "Holiday") |>
select_at(vars(contains("season"))) |>
mutate(
seasonal_peak_year = seasonal_peak_year +
4*(seasonal_peak_year==0),
seasonal_trough_year = seasonal_trough_year +
4*(seasonal_trough_year==0),
seasonal_peak_year = glue("Q{seasonal_peak_year}"),
seasonal_trough_year = glue("Q{seasonal_trough_year}"),
) |>
GGally::ggpairs()
View(tourism_features)
tourism_features |>
filter(Purpose == "Holiday",State=="
South Australia") |>
select_at(vars(contains("season"))) |>
mutate(
seasonal_peak_year = seasonal_peak_year +
4*(seasonal_peak_year==0),
seasonal_trough_year = seasonal_trough_year +
4*(seasonal_trough_year==0),
seasonal_peak_year = glue("Q{seasonal_peak_year}"),
seasonal_trough_year = glue("Q{seasonal_trough_year}"),
) |>
GGally::ggpairs()
tourism_features |>
filter(Purpose == "Holiday",State=="South Australia") |>
select_at(vars(contains("season"))) |>
mutate(
seasonal_peak_year = seasonal_peak_year +
4*(seasonal_peak_year==0),
seasonal_trough_year = seasonal_trough_year +
4*(seasonal_trough_year==0),
seasonal_peak_year = glue("Q{seasonal_peak_year}"),
seasonal_trough_year = glue("Q{seasonal_trough_year}"),
) |>
GGally::ggpairs()
tourism_features |>
filter(Purpose == "Holiday") |>
select_at(vars(contains("season"))) |>
mutate(
seasonal_peak_year = seasonal_peak_year +
4*(seasonal_peak_year==0),
seasonal_trough_year = seasonal_trough_year +
4*(seasonal_trough_year==0),
seasonal_peak_year = glue("Q{seasonal_peak_year}"),
seasonal_trough_year = glue("Q{seasonal_trough_year}"),
) |>
GGally::ggpairs()
tourism_features |>
#filter(Purpose == "Holiday") |>
select_at(vars(contains("season"))) |>
mutate(
seasonal_peak_year = seasonal_peak_year +
4*(seasonal_peak_year==0),
seasonal_trough_year = seasonal_trough_year +
4*(seasonal_trough_year==0),
seasonal_peak_year = glue("Q{seasonal_peak_year}"),
seasonal_trough_year = glue("Q{seasonal_trough_year}"),
) |>
GGally::ggpairs()
tourism_features |>
#filter(Purpose == "Holiday") |>
select_at(vars(contains("season"))) |>
mutate(
seasonal_peak_year = seasonal_peak_year +
4*(seasonal_peak_year==0),
seasonal_trough_year = seasonal_trough_year +
4*(seasonal_trough_year==0),
seasonal_peak_year = glue("Q{seasonal_peak_year}"),
seasonal_trough_year = glue("Q{seasonal_trough_year}"),
) |>
GGally::ggpairs(mapping = aes(colour = Purpose))
tourism_features |>
#filter(Purpose == "Holiday") |>
select_at(vars(contains("season"),Purpose)) |>
mutate(
seasonal_peak_year = seasonal_peak_year +
4*(seasonal_peak_year==0),
seasonal_trough_year = seasonal_trough_year +
4*(seasonal_trough_year==0),
seasonal_peak_year = glue("Q{seasonal_peak_year}"),
seasonal_trough_year = glue("Q{seasonal_trough_year}"),
) |>
GGally::ggpairs(mapping = aes(colour = Purpose))
tourism_features |>
filter(Purpose == "Holiday") |>
select_at(vars(contains("season"),State)) |>
mutate(
seasonal_peak_year = seasonal_peak_year +
4*(seasonal_peak_year==0),
seasonal_trough_year = seasonal_trough_year +
4*(seasonal_trough_year==0),
seasonal_peak_year = glue("Q{seasonal_peak_year}"),
seasonal_trough_year = glue("Q{seasonal_trough_year}"),
) |>
GGally::ggpairs(mapping = aes(colour = State))
tourism_features |>
filter(Purpose == "Holiday") |>
select_at(vars(contains("season"),State))
temp=tourism_features |>
filter(Purpose == "Holiday") |>
select_at(vars(contains("season"),State))
View(temp)
View(temp)
temp=tourism_features |>
filter(Purpose == "Holiday",State!="ACT") |>
select_at(vars(contains("season"),State)) |>
mutate(
seasonal_peak_year = seasonal_peak_year +
4*(seasonal_peak_year==0),
seasonal_trough_year = seasonal_trough_year +
4*(seasonal_trough_year==0),
seasonal_peak_year = glue("Q{seasonal_peak_year}"),
seasonal_trough_year = glue("Q{seasonal_trough_year}"),
) |>
GGally::ggpairs(mapping = aes(colour = State))
tourism_features |>
filter(Purpose == "Holiday",State!="ACT") |>
select_at(vars(contains("season"),State)) |>
mutate(
seasonal_peak_year = seasonal_peak_year +
4*(seasonal_peak_year==0),
seasonal_trough_year = seasonal_trough_year +
4*(seasonal_trough_year==0),
seasonal_peak_year = glue("Q{seasonal_peak_year}"),
seasonal_trough_year = glue("Q{seasonal_trough_year}"),
) |>
GGally::ggpairs(mapping = aes(colour = State))
pbs_features <- PBS |>
features(Cost,feature_set(pkgs='feasts'))
pbs_features
View(pbs_features)
pbs_pcs <- pbs_features |>
select(-Concession, -Type, -ATC1, -ATC2, -`...26`) |>
select(where(~!any(is.na(.)))) |>
prcomp(scale=T) |>
augment(pbs_features)
View(pbs_pcs)
pbs_pcs |>
ggplot(aes(x = .fittedPC1, y = .fittedPC2, col = Type)) +
geom_point() +
theme(aspect.ratio = 1)
outliers <- pbs_pcs |>
filter(abs(.fittedPC1) > 10 | abs(.fittedPC2) > 10) |>
select(Concession, Type, ATC1, ATC2, .fittedPC1, .fittedPC2)
outliers
outliers |>
left_join(tourism, by = c("Concession", "Type", "ATC1", "ATC2"), multiple = "all") |>
mutate(Series = glue("{Concession}", "{Type}", "{ATC1}", "{ATC2}", .sep = "\n\n")) |>
ggplot(aes(x = Month, y = Cost)) +
geom_line() +
facet_grid(Series ~ ., scales = "free") +
labs(title = "Outlying time series in PC space")
View(outliers)
pbs_features
View(pbs_features)
View(outliers)
OutlierFull=PBS|>filter(Concession=="Concessional",Type=="Co-payments")
View(OutlierFull)
View(outliers)
OutlierFull=PBS|>filter(Concession=="Concessional",Type=="Co-payments",ATC1=="C",ATC2=="C10")
View(OutlierFull)
OutlierFull|>
ggplot(aes(x = Month, y = Cost)) +
geom_line()
PBS |>
filter(Concession == 'Concessional' & Type=='Co-payments' & ATC1 == 'C' & ATC2 == 'C10') |>
ggplot(aes(x = Month, y = Cost)) +
geom_line() +
facet_grid(Series ~ ., scales = "free") +
labs(title = "Outlying time series in PC space")
OutlierFull|>
ggplot(aes(x = Month, y = Cost)) +
geom_line()
