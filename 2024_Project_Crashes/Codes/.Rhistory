aes(label = Label),
nudge_x = 0.2,  # Adjust to avoid overlapping text
color = "blue",
size = 3
)+
stat_summary(fun.y=mean, colour="darkred", geom="point",
shape=18, size=3,show.legend = FALSE) +
labs(x="All Locations",y="Ammonia Values",title="Ammonia Values Boxplot")+
theme_classic()
p1
ggsave("../Results/Ammonia_Boxplot.png", plot = p1, width = 10, height = 6, dpi = 300)
ggsave("../Results/Ammonia_Boxplot.jpg", plot = p1, width = 10, height = 6, dpi = 300)
p1<- ggplot(df1, aes(x = "", y = Phosphate)) +
stat_boxplot(geom = 'errorbar', width = 0.3)+
geom_boxplot()+
geom_text_repel(
data = df1 %>%
dplyr::filter(Ammonia > quantile(Ammonia, 0.75) + 5* IQR(Ammonia) |
Ammonia < quantile(Ammonia, 0.25) - 5 * IQR(Ammonia)),  # Filtering outliers
aes(label = Label),
nudge_x = 0.2,  # Adjust to avoid overlapping text
color = "blue",
size = 3
)+
stat_summary(fun.y=mean, colour="darkred", geom="point",
shape=18, size=3,show.legend = FALSE) +
labs(x="All Locations",y="Ammonia Values",title="Ammonia Values Boxplot")+
theme_classic()
p1
ggsave("../Results/Ammonia_Boxplot.png", plot = p1, width = 10, height = 6, dpi = 300)
ggsave("../Results/Ammonia_Boxplot.jpg", plot = p1, width = 10, height = 6, dpi = 300)
p1<- ggplot(df1, aes(x = "", y = Phosphate)) +
stat_boxplot(geom = 'errorbar', width = 0.3)+
geom_boxplot()+
geom_text_repel(
data = df1 %>%
dplyr::filter(Ammonia > quantile(Ammonia, 0.5) + 5* IQR(Ammonia) |
Ammonia < quantile(Ammonia, 0.25) - 5 * IQR(Ammonia)),  # Filtering outliers
aes(label = Label),
nudge_x = 0.2,  # Adjust to avoid overlapping text
color = "blue",
size = 3
)+
stat_summary(fun.y=mean, colour="darkred", geom="point",
shape=18, size=3,show.legend = FALSE) +
labs(x="All Locations",y="Ammonia Values",title="Ammonia Values Boxplot")+
theme_classic()
p1
ggsave("../Results/Ammonia_Boxplot.png", plot = p1, width = 10, height = 6, dpi = 300)
ggsave("../Results/Ammonia_Boxplot.jpg", plot = p1, width = 10, height = 6, dpi = 300)
p1<- ggplot(df1, aes(x = "", y = Phosphate)) +
stat_boxplot(geom = 'errorbar', width = 0.3)+
geom_boxplot()+
geom_text_repel(
data = df1 %>%
dplyr::filter(Ammonia > 15 |
Ammonia < quantile(Ammonia, 0.25) - 1.5 * IQR(Ammonia)),  # Filtering outliers
aes(label = Label),
nudge_x = 0.2,  # Adjust to avoid overlapping text
color = "blue",
size = 3
)+
stat_summary(fun.y=mean, colour="darkred", geom="point",
shape=18, size=3,show.legend = FALSE) +
labs(x="All Locations",y="Ammonia Values",title="Ammonia Values Boxplot")+
theme_classic()
p1
ggsave("../Results/Ammonia_Boxplot.png", plot = p1, width = 10, height = 6, dpi = 300)
ggsave("../Results/Ammonia_Boxplot.jpg", plot = p1, width = 10, height = 6, dpi = 300)
p1<- ggplot(df1, aes(x = "", y = Phosphate)) +
stat_boxplot(geom = 'errorbar', width = 0.3)+
geom_boxplot()+
geom_text_repel(
data = df1 %>%
dplyr::filter(Ammonia > 15),  # Filtering outliers
aes(label = Label),
nudge_x = 0.2,  # Adjust to avoid overlapping text
color = "blue",
size = 3
)+
stat_summary(fun.y=mean, colour="darkred", geom="point",
shape=18, size=3,show.legend = FALSE) +
labs(x="All Locations",y="Ammonia Values",title="Ammonia Values Boxplot")+
theme_classic()
p1
ggsave("../Results/Ammonia_Boxplot.png", plot = p1, width = 10, height = 6, dpi = 300)
ggsave("../Results/Ammonia_Boxplot.jpg", plot = p1, width = 10, height = 6, dpi = 300)
p1<- ggplot(df1, aes(x = "", y = Ammonia)) +
stat_boxplot(geom = 'errorbar', width = 0.3)+
geom_boxplot()+
geom_text_repel(
data = df1 %>%
dplyr::filter(Ammonia > 15),  # Filtering outliers
aes(label = Label),
nudge_x = 0.2,  # Adjust to avoid overlapping text
color = "blue",
size = 3
)+
stat_summary(fun.y=mean, colour="darkred", geom="point",
shape=18, size=3,show.legend = FALSE) +
labs(x="All Locations",y="Ammonia Values",title="Ammonia Values Boxplot")+
theme_classic()
p1
ggsave("../Results/Ammonia_Boxplot.png", plot = p1, width = 10, height = 6, dpi = 300)
ggsave("../Results/Ammonia_Boxplot.jpg", plot = p1, width = 10, height = 6, dpi = 300)
View(df1)
# Reshape the dataset to long format
data_long <- df1 %>% select(Label,Phosphate,Ammonia,Nitrate)
pivot_longer(cols = c(Phosphate, Ammonia, Nitrate),
names_to = "Micronutrient",
values_to = "Value")
View(data_long)
# Reshape the dataset to long format
data_long <- df1 %>% select(Label,Phosphate,Ammonia,Nitrate)|>
pivot_longer(cols = c(Phosphate, Ammonia, Nitrate),
names_to = "Micronutrient",
values_to = "Value")
# Create the bar chart
ggplot(data_long, aes(x = Label, y = Value, fill = Micronutrient)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Micronutrient Values by Location",
x = "Location",
y = "Micronutrient Value") +
theme_minimal()
# Reshape the dataset to long format
data_long <- df1 %>% select(Label,Phosphate,Ammonia,Nitrate)|>
pivot_longer(cols = c(Phosphate, Ammonia, Nitrate),
names_to = "Micronutrient",
values_to = "Value")
# Create the bar chart
ggplot(data_long, aes(x = Label, y = Value, fill = Micronutrient)) +
geom_bar(stat = "identity", position = "dodge", color = "black") +  # Adding black boundary
scale_fill_manual(values = c("Phosphate" = "blue", "Ammonia" = "red", "Nitrate" = "orange")) +  # Custom colors without green
labs(title = "Micronutrient Values by Location",
x = "Location",
y = "Micronutrient Value") +
theme_minimal()
# Reshape the dataset to long format
data_long <- df1 %>% select(Label,Phosphate,Ammonia,Nitrate)|>
pivot_longer(cols = c(Phosphate, Ammonia, Nitrate),
names_to = "Micronutrient",
values_to = "Value")
# Create the bar chart
ggplot(data_long, aes(x = Label, y = Value, fill = Micronutrient)) +
geom_bar(stat = "identity", position = "dodge", color = "black") +  # Adding black boundary
scale_fill_manual(values = c("Phosphate" = "blue", "Ammonia" = "red", "Nitrate" = "orange")) +  # Custom colors without green
labs(title = "Micronutrient Values by Location",
x = "Location",
y = "Micronutrient Value") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 90, hjust = 0, vjust = 0))
data_long <- df1 %>% select(Label,Phosphate,Ammonia,Nitrate)|>
pivot_longer(cols = c(Phosphate, Ammonia, Nitrate),
names_to = "Micronutrient",
values_to = "Value")
p1=ggplot(data_long, aes(x = Label, y = Value, fill = Micronutrient)) +
geom_bar(stat = "identity", position = "dodge", color = "black") +  # Adding black boundary
scale_fill_manual(values = c("Phosphate" = "blue", "Ammonia" = "red", "Nitrate" = "orange")) +  # Custom colors without green
labs(title = "Micronutrient Values by Location",
x = "Location",
y = "Micronutrient Value") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 90, hjust = 0, vjust = 0))
ggsave("../Results/Micornutrients.png", plot = p1, width = 10, height = 6, dpi = 300)
ggsave("../Results/Micornutrients.jpg", plot = p1, width = 10, height = 6, dpi = 300)
data_long <- df1 %>% select(Label,Phosphate,Ammonia,Nitrate)|>
pivot_longer(cols = c(Phosphate, Ammonia, Nitrate),
names_to = "Micronutrient",
values_to = "Value")
p1=ggplot(data_long, aes(x = Label, y = Value, fill = Micronutrient)) +
geom_bar(stat = "identity", position = "dodge", color = "black") +  # Adding black boundary
scale_fill_manual(values = c("Phosphate" = "blue", "Ammonia" = "red", "Nitrate" = "orange")) +  # Custom colors without green
labs(title = "Micronutrient Values by Location",
x = "Location",
y = "Micronutrient Value") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 90, hjust = 0, vjust = 0))
p1
ggsave("../Results/Micornutrients.png", plot = p1, width = 10, height = 6, dpi = 300)
ggsave("../Results/Micornutrients.jpg", plot = p1, width = 10, height = 6, dpi = 300)
data_long <- df1 %>% select(Label,Phosphate,Ammonia,Nitrate)|>
pivot_longer(cols = c(Phosphate, Ammonia, Nitrate),
names_to = "Micronutrient",
values_to = "Value")
p1=ggplot(data_long, aes(x = Label, y = Value, fill = Micronutrient)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8), width = 0.6, color = "black") +  # Adding black boundary
scale_fill_manual(values = c("Phosphate" = "blue", "Ammonia" = "red", "Nitrate" = "orange")) +  # Custom colors without green
labs(title = "Micronutrient Values by Location",
x = "Location",
y = "Micronutrient Value") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 90, hjust = 0, vjust = 0))
p1
ggsave("../Results/Micornutrients.png", plot = p1, width = 10, height = 6, dpi = 300)
ggsave("../Results/Micornutrients.jpg", plot = p1, width = 10, height = 6, dpi = 300)
data_long <- df1 %>% select(Label,Phosphate,Ammonia,Nitrate)|>
pivot_longer(cols = c(Phosphate, Ammonia, Nitrate),
names_to = "Micronutrient",
values_to = "Value")
p1=ggplot(data_long, aes(x = Label, y = Value, fill = Micronutrient)) +
geom_bar(stat = "identity", position = position_dodge(width = 1), width = 0.6, color = "black") +  # Adding black boundary
scale_fill_manual(values = c("Phosphate" = "blue", "Ammonia" = "red", "Nitrate" = "orange")) +  # Custom colors without green
labs(title = "Micronutrient Values by Location",
x = "Location",
y = "Micronutrient Value") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 90, hjust = 0, vjust = 0))
p1
ggsave("../Results/Micornutrients.png", plot = p1, width = 10, height = 6, dpi = 300)
ggsave("../Results/Micornutrients.jpg", plot = p1, width = 10, height = 6, dpi = 300)
data_long <- df1 %>% select(Label,Phosphate,Ammonia,Nitrate)|>
pivot_longer(cols = c(Phosphate, Ammonia, Nitrate),
names_to = "Micronutrient",
values_to = "Value")
p1=ggplot(data_long, aes(x = Label, y = Value, fill = Micronutrient)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8), width = 1, color = "black") +  # Adding black boundary
scale_fill_manual(values = c("Phosphate" = "blue", "Ammonia" = "red", "Nitrate" = "orange")) +  # Custom colors without green
labs(title = "Micronutrient Values by Location",
x = "Location",
y = "Micronutrient Value") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 90, hjust = 0, vjust = 0))
p1
ggsave("../Results/Micornutrients.png", plot = p1, width = 10, height = 6, dpi = 300)
ggsave("../Results/Micornutrients.jpg", plot = p1, width = 10, height = 6, dpi = 300)
data_long <- df1 %>% select(Label,Phosphate,Ammonia,Nitrate)|>
pivot_longer(cols = c(Phosphate, Ammonia, Nitrate),
names_to = "Micronutrient",
values_to = "Value")
p1=ggplot(data_long, aes(x = Label, y = Value, fill = Micronutrient)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8), width = 1, color = "black") +  # Adding black boundary
scale_fill_manual(values = c("Phosphate" = "blue", "Ammonia" = "red", "Nitrate" = "orange")) +  # Custom colors without green
labs(title = "Micronutrient Values by Location",
x = "Location",
y = "Micronutrient Value") +
scale_x_discrete(expand = expansion(mult = c(0.2, 0.2))) +  # Adds more space between the locations on the x-axis
theme_minimal()+
theme(axis.text.x = element_text(angle = 90, hjust = 0, vjust = 0))
p1
ggsave("../Results/Micornutrients.png", plot = p1, width = 10, height = 6, dpi = 300)
ggsave("../Results/Micornutrients.jpg", plot = p1, width = 10, height = 6, dpi = 300)
data_long <- df1 %>% select(Label,Phosphate,Ammonia,Nitrate)|>
pivot_longer(cols = c(Phosphate, Ammonia, Nitrate),
names_to = "Micronutrient",
values_to = "Value")
p1=ggplot(data_long, aes(x = Label, y = Value, fill = Micronutrient)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8), width = 1, color = "black") +  # Adding black boundary
scale_fill_manual(values = c("Phosphate" = "blue", "Ammonia" = "red", "Nitrate" = "orange")) +  # Custom colors without green
labs(title = "Micronutrient Values by Location",
x = "Location",
y = "Micronutrient Value") +
scale_x_discrete(expand = expansion(mult = c(0.5, 0.5))) +  # Adds more space between the locations on the x-axis
theme_minimal()+
theme(axis.text.x = element_text(angle = 90, hjust = 0, vjust = 0))
p1
ggsave("../Results/Micornutrients.png", plot = p1, width = 10, height = 6, dpi = 300)
ggsave("../Results/Micornutrients.jpg", plot = p1, width = 10, height = 6, dpi = 300)
data_long <- df1 %>% select(Label,Phosphate,Ammonia,Nitrate)|>
pivot_longer(cols = c(Phosphate, Ammonia, Nitrate),
names_to = "Micronutrient",
values_to = "Value")
p1=ggplot(data_long, aes(x = Label, y = Value, fill = Micronutrient)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8,padding=0.5), width = 1, color = "black") +  # Adding black boundary
scale_fill_manual(values = c("Phosphate" = "blue", "Ammonia" = "red", "Nitrate" = "orange")) +  # Custom colors without green
labs(title = "Micronutrient Values by Location",
x = "Location",
y = "Micronutrient Value") +
scale_x_discrete(expand = expansion(mult = c(0.5, 0.5))) +  # Adds more space between the locations on the x-axis
theme_minimal()+
theme(axis.text.x = element_text(angle = 90, hjust = 0, vjust = 0))
data_long <- df1 %>% select(Label,Phosphate,Ammonia,Nitrate)|>
pivot_longer(cols = c(Phosphate, Ammonia, Nitrate),
names_to = "Micronutrient",
values_to = "Value")
p1=ggplot(data_long, aes(x = Label, y = Value, fill = Micronutrient)) +
geom_bar(stat = "identity", position = position_dodge2(width = 0.8,padding=0.5), width = 1, color = "black") +  # Adding black boundary
scale_fill_manual(values = c("Phosphate" = "blue", "Ammonia" = "red", "Nitrate" = "orange")) +  # Custom colors without green
labs(title = "Micronutrient Values by Location",
x = "Location",
y = "Micronutrient Value") +
scale_x_discrete(expand = expansion(mult = c(0.5, 0.5))) +  # Adds more space between the locations on the x-axis
theme_minimal()+
theme(axis.text.x = element_text(angle = 90, hjust = 0, vjust = 0))
p1
ggsave("../Results/Micornutrients.png", plot = p1, width = 10, height = 6, dpi = 300)
ggsave("../Results/Micornutrients.jpg", plot = p1, width = 10, height = 6, dpi = 300)
data_long <- df1 %>% select(Label,Phosphate,Ammonia,Nitrate)|>
pivot_longer(cols = c(Phosphate, Ammonia, Nitrate),
names_to = "Micronutrient",
values_to = "Value")
p1=ggplot(data_long, aes(x = Label, y = Value, fill = Micronutrient)) +
geom_bar(stat = "identity", position = position_dodge2(width = 0.8), width = 1, color = "black") +  # Adding black boundary
scale_fill_manual(values = c("Phosphate" = "blue", "Ammonia" = "red", "Nitrate" = "orange")) +  # Custom colors without green
labs(title = "Micronutrient Values by Location",
x = "Location",
y = "Micronutrient Value") +
scale_x_discrete(expand = expansion(mult = c(0.5, 0.5))) +  # Adds more space between the locations on the x-axis
theme_minimal()+
theme(axis.text.x = element_text(angle = 90, hjust = 0, vjust = 0))
p1
ggsave("../Results/Micornutrients.png", plot = p1, width = 10, height = 6, dpi = 300)
ggsave("../Results/Micornutrients.jpg", plot = p1, width = 10, height = 6, dpi = 300)
data_long <- df1 %>% select(Label,Phosphate,Ammonia,Nitrate)|>
pivot_longer(cols = c(Phosphate, Ammonia, Nitrate),
names_to = "Micronutrient",
values_to = "Value")
p1=ggplot(data_long, aes(x = Label, y = Value, fill = Micronutrient)) +
geom_bar(stat = "identity", position = position_dodge2(width = 0.8), width = 1, color = "black") +  # Adding black boundary
scale_fill_manual(values = c("Phosphate" = "blue", "Ammonia" = "red", "Nitrate" = "orange")) +  # Custom colors without green
labs(title = "Micronutrient Values by Location",
x = "Location",
y = "Micronutrient Value") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 90, hjust = 0, vjust = 0))
p1
ggsave("../Results/Micornutrients.png", plot = p1, width = 10, height = 6, dpi = 300)
ggsave("../Results/Micornutrients.jpg", plot = p1, width = 10, height = 6, dpi = 300)
data_long <- df1 %>% select(Label,Phosphate,Ammonia,Nitrate)|>
pivot_longer(cols = c(Phosphate, Ammonia, Nitrate),
names_to = "Micronutrient",
values_to = "Value")
p1=ggplot(data_long, aes(x = Label, y = Value, fill = Micronutrient)) +
geom_bar(stat = "identity", position = position_dodge2(width = 0.8,padding=1), width = 1, color = "black") +  # Adding black boundary
scale_fill_manual(values = c("Phosphate" = "blue", "Ammonia" = "red", "Nitrate" = "orange")) +  # Custom colors without green
labs(title = "Micronutrient Values by Location",
x = "Location",
y = "Micronutrient Value") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 90, hjust = 0, vjust = 0))
p1
ggsave("../Results/Micornutrients.png", plot = p1, width = 10, height = 6, dpi = 300)
ggsave("../Results/Micornutrients.jpg", plot = p1, width = 10, height = 6, dpi = 300)
data_long <- df1 %>% select(Label,Phosphate,Ammonia,Nitrate)|>
pivot_longer(cols = c(Phosphate, Ammonia, Nitrate),
names_to = "Micronutrient",
values_to = "Value")
p1=ggplot(data_long, aes(x = Label, y = Value, fill = Micronutrient)) +
geom_bar(stat = "identity", position = position_dodge2(width = 0.8,padding=0.1), width = 1, color = "black") +  # Adding black boundary
scale_fill_manual(values = c("Phosphate" = "blue", "Ammonia" = "red", "Nitrate" = "orange")) +  # Custom colors without green
labs(title = "Micronutrient Values by Location",
x = "Location",
y = "Micronutrient Value") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 90, hjust = 0, vjust = 0))
p1
ggsave("../Results/Micornutrients.png", plot = p1, width = 10, height = 6, dpi = 300)
ggsave("../Results/Micornutrients.jpg", plot = p1, width = 10, height = 6, dpi = 300)
data_long <- df1 %>% select(Label,Phosphate,Ammonia,Nitrate)|>
pivot_longer(cols = c(Phosphate, Ammonia, Nitrate),
names_to = "Micronutrient",
values_to = "Value")
p1=ggplot(data_long, aes(x = Label, y = Value, fill = Micronutrient)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8), width = 0.4, color = "black") +  # Adding black boundary
scale_fill_manual(values = c("Phosphate" = "blue", "Ammonia" = "red", "Nitrate" = "orange")) +  # Custom colors without green
labs(title = "Micronutrient Values by Location",
x = "Location",
y = "Micronutrient Value") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 90, hjust = 0, vjust = 0))
p1
ggsave("../Results/Micornutrients.png", plot = p1, width = 10, height = 6, dpi = 300)
ggsave("../Results/Micornutrients.jpg", plot = p1, width = 10, height = 6, dpi = 300)
data_long <- df1 %>% select(Label,Phosphate,Ammonia,Nitrate)|>
pivot_longer(cols = c(Phosphate, Ammonia, Nitrate),
names_to = "Micronutrient",
values_to = "Value")
p1=ggplot(data_long, aes(x = Label, y = Value, fill = Micronutrient)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.4), width = 0.4, color = "black") +  # Adding black boundary
scale_fill_manual(values = c("Phosphate" = "blue", "Ammonia" = "red", "Nitrate" = "orange")) +  # Custom colors without green
labs(title = "Micronutrient Values by Location",
x = "Location",
y = "Micronutrient Value") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 90, hjust = 0, vjust = 0))
p1
ggsave("../Results/Micornutrients.png", plot = p1, width = 10, height = 6, dpi = 300)
ggsave("../Results/Micornutrients.jpg", plot = p1, width = 10, height = 6, dpi = 300)
data_long <- df1 %>% select(Label,Phosphate,Ammonia,Nitrate)|>
pivot_longer(cols = c(Phosphate, Ammonia, Nitrate),
names_to = "Micronutrient",
values_to = "Value")
p1=ggplot(data_long, aes(x = Label, y = Value, fill = Micronutrient)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.5), width = 0.5, color = "black") +  # Adding black boundary
scale_fill_manual(values = c("Phosphate" = "blue", "Ammonia" = "red", "Nitrate" = "orange")) +  # Custom colors without green
labs(title = "Micronutrient Values by Location",
x = "Location",
y = "Micronutrient Value") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 90, hjust = 0, vjust = 0))
p1
ggsave("../Results/Micornutrients.png", plot = p1, width = 10, height = 6, dpi = 300)
ggsave("../Results/Micornutrients.jpg", plot = p1, width = 10, height = 6, dpi = 300)
View(df1)
setwd("~/GitHub/TimeSeries_fpp3_2024")
# ---- Regular Crash Count ----
# Forecasting Regular Crash Counts/comparing multiple models/one train test split/
library(urca)
library(fpp3)
library(readxl)
crashes <- read_excel("Datasets/EBR Daily by Hwy Class.xlsx")
games <- read.csv('Datasets/lsu-schedule-scrape-18-23.csv')
covid <- read_excel('Datasets/covid variable.xlsx')
holidays <- read.csv('Datasets/holiday_dates_baton_rouge.csv')
graph_path3a <- "graphs/3a/"
graph_save <- function(graph,graph_name,graph_path) {
ggsave(paste0(graph_path,graph_name,".jpg"),graph,width=15,height=8)
}
# ==== Data Import and Weekly Conversion ====
# convert tibble to tsibble (weekly)
crashes_w <- crashes |>
mutate(Week = yearweek(CrashDate)) |>
group_by(Week, HighwayClass) |>
summarise(
crashCount = sum(crashCount),
Pedestrian = sum(Pedestrian),
Bicycle = sum(Bicycle),
NonMotorist = sum(NonMotorist),
Motorcycle = sum(Motorcycle),
Fatal = sum(Fatal),
iceCrashes = sum(iceCrashes),
icePresent = ifelse(iceCrashes > 0,1,0)
) |>
as_tsibble(index = Week, key = HighwayClass) |>
ungroup()
# convert games to weekly tsibble
games_w <- games |>
mutate(Week = yearweek(date),
home = ifelse(location == 'Home',1,0)) |>
group_by(Week) |>
summarise(home = sum(home)) |>
as_tsibble(index=Week) |>
ungroup()
# convert covid to weekly tsibble
covid_w <- covid |>
mutate(Week = yearweek(date)) |>
group_by(Week) |>
summarise(covid = max(covid)) |>
as_tsibble(index=Week) |>
ungroup()
# convert holiday to weekly tsibble
holiday_w <- holidays |>
mutate(Week = yearweek(date)) |>
group_by(Week) |>
summarise(holiday = max(holiday)) |>
as_tsibble(index=Week) |>
ungroup()
# ==== Data Combination ====
crashes_w <- merge(crashes_w,games_w,all = TRUE)
crashes_w <- merge(crashes_w,covid_w,all = TRUE)
crashes_w <- merge(crashes_w,holiday_w,all = TRUE)
crashes_w[is.na(crashes_w)] <- 0
View(crashes_w)
View(crashes_w)
# ==== Data Selection and Mutation====
# Select a Highway Class (integer between 1 and 43)
# Note: Not all have good data or create good forecasts
hwy = 20
crashes_w_hwy <- crashes_w |>
filter(HighwayClass == hwy) |>
replace_na(list(crashCount=0))
crashes_w_hwy <- crashes_w_hwy |>
as_tsibble(index = Week)
# ==== Exploration ====
cc_byDay <- crashes |> filter(HighwayClass == 20) |>
mutate(CrashDate = date(CrashDate)) |>
as_tsibble(index=CrashDate) |>
autoplot(crashCount)
cc_byDay
graph_save(cc_byDay,'CrashCountByDay',graph_path3a)
# Plot crashes
tot_crash<-crashes_w_hwy |> autoplot(crashCount) +
labs(title='Crashes on Urban 2-lane in EBR')
tot_crash
graph_save(tot_crash,'TotalCrashes',graph_path3a)
# Lagged data
crashes_w_hwy |>
gg_lag(crashCount, geom = 'point', lags = c(5,10,15,20,26,30,35,40,45,50,52,60))
# Autocorrelation
cc_ac <- crashes_w_hwy |>
ACF(crashCount,lag_max = 104) |>
autoplot()
cc_ac
graph_save(cc_ac, 'CrashCountAutoCorrelation',graph_path3a)
# White noise testing
crashes_w_hwy |> features(crashCount,ljung_box,lag=26) # Try a specifc lag value if the default is bad.
# Stationarity testing
crashes_w_hwy |> features(crashCount,list(unitroot_kpss,unitroot_ndiffs,unitroot_nsdiffs))
# ==== Moving Average ====
crashes_w_hwy <- crashes_w_hwy |>
mutate(
`5-MA` = slider::slide_dbl(crashCount, mean,
.before = 2, .after = 2, .complete = TRUE),
`4-MA` = slider::slide_dbl(crashCount, mean,
.before = 1, .after = 2, .complete = TRUE),
`2x4-MA` = slider::slide_dbl(`4-MA`, mean,
.before = 1, .after = 0, .complete = TRUE),
`26-MA` = slider::slide_dbl(crashCount, mean,
.before = 12, .after = 13, .complete = TRUE)
)
View(cc_ac)
#================== Loading Packages and Data ===========================
library(easypackages)
libraries("urca","fpp3","tidyverse","readxl")
crashes <- read_excel("../Data/EBR Daily by Hwy Class.xlsx")
setwd("~/GitHub/TimeSeries_fpp3_2024/2024_Crashes/Codes")
#================== Loading Packages and Data ===========================
library(easypackages)
libraries("urca","fpp3","tidyverse","readxl")
crashes <- read_excel("../Data/EBR Daily by Hwy Class.xlsx")
games <- read.csv('../Data/lsu-schedule-scrape-18-23.csv')
covid <- read_excel('../Data/covid variable.xlsx')
holidays <- read.csv('../Data/holiday_dates_baton_rouge.csv')
